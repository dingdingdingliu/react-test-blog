{"version":3,"sources":["utils.js","context.js","img/0613.jpg","components/Header/Header.js","components/Footer/Footer.js","WebAPI.js","components/Paginator/Paginator.js","components/IsLoading/IsLoading.js","img/bear.png","pages/Homepage/HomePage.js","img/logo.png","pages/Aboutpage/AboutPage.js","components/Button/Button.js","pages/Signuppage/SignupPage.js","pages/Loginpage/LoginPage.js","pages/Postpage/PostPage.js","pages/Newpostpage/NewPostPage.js","App.js","reportWebVitals.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","AuthContext","createContext","LoadingContext","HeaderDiv","styled","div","HeaderImg","HeaderBackground","HeaderContainer","HeaderContainerLeft","Brand","h1","NavbarList","Nav","Link","props","$active","Header","useContext","user","setUser","useState","navbar","setNavbar","pathname","useLocation","history","useHistory","changeBackground","window","scrollY","useEffect","addEventListener","className","to","onClick","removeItem","push","FooterDiv","Footer","BASE_URL","getPostsPerPage","page","fetch","then","res","json","getMe","headers","authorization","ButtonStyle","PaginatorDiv","PaginatorButton","value","PaginatorComponent","pages","setPages","posts","postsLength","length","totalPage","Math","ceil","pagesArray","i","map","IsLoadingDiv","IsLoadingStyle","override","css","IsLoadingComponent","color","size","HomepageDiv","Posts","PostContainer","PostDiv","PostTitle","PostDate","Img","img","Post","post","src","PostImg","id","title","Date","createdAt","toLocaleDateString","HomePage","setPosts","isLoading","setIsLoading","useParams","AboutContainer","AboutContentStyle","AboutContent","AboutImg","PostPage","button","SignupDivStyle","SignupFormStyle","form","TitleStyle","InputDivStyle","InputStyle","input","SignupButtonStyle","ErrMsgDivStyle","LoginPage","username","setUsername","nickname","setNickname","password","setPassword","errorMsg","setErrorMsg","onSubmit","e","preventDefault","method","body","JSON","stringify","register","data","ok","message","type","onChange","target","LoginDivStyle","LoginFormStyle","LoginButtonStyle","login","catch","err","toString","PostInfo","PostContent","setPost","getPost","NewPostDivStyle","NewPostFormStyle","TitleDivStyle","ContentDivStyle","TextAreaStyle","textarea","NewPostButtonStyle","NewPostPage","setTitle","setBody","createNewPost","rows","cols","Root","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28810561.chunk.js","sourcesContent":["const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token)\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME)\r\n}\r\n\r\nexport const deleteAuthToken = () => {\r\n  return localStorage.removeItem(TOKEN_NAME)\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)\r\n\r\nexport const LoadingContext = createContext(false)\r\n","export default __webpack_public_path__ + \"static/media/0613.9e26be73.jpg\";","import { useContext, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation, useHistory } from 'react-router-dom'\nimport { deleteAuthToken } from '../../utils'\nimport { AuthContext } from '../../context'\nimport HeaderBackground from '../../img/0613.jpg'\n\nconst HeaderDiv = styled.div``\n\nconst HeaderImg = styled.div`\n  height: 630px;\n  background-image: url(${HeaderBackground});\n  position: relative;\n  top: -110px;\n`\n\nconst HeaderContainer = styled.div`\n  height: 70px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  background: transparent;\n  padding: 10px;\n\n  &.navbarActive {\n    background: white;\n    transition: 2s all;\n  }\n`\n\nconst HeaderContainerLeft = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Brand = styled.h1`\n  color: #625b57;\n  margin-right: 10px;\n`\n\nconst NavbarList = styled.div`\n  margin-top: 8px;\n  display: flex;\n`\n\nconst Nav = styled(Link)`\n  display: flex;\n  font-size: 20px;\n  padding: 0px 8px;\n  padding-bottom: 2px;\n  cursor: pointer;\n  color: gray;\n  text-decoration: none;\n\n  & + & {\n    margin-left: 8px;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n  font-weight: bold;\n  color: #625b57;\n  `}\n`\n\nexport default function Header() {\n  const { user, setUser } = useContext(AuthContext)\n  const [navbar, setNavbar] = useState(false)\n  const location = useLocation()\n  const pathname = location.pathname\n  let history = useHistory()\n\n  const changeBackground = () => {\n    if (window.scrollY >= 150) {\n      setNavbar(true)\n    } else {\n      setNavbar(false)\n    }\n  }\n\n  useEffect(() => {\n    changeBackground()\n    window.addEventListener('scroll', changeBackground)\n  }, [])\n\n  const handleLogout = () => {\n    deleteAuthToken()\n    setUser(null)\n    if (pathname !== '/') history.push('/')\n  }\n\n  return (\n    <HeaderDiv>\n      <HeaderImg />\n      <HeaderContainer className={navbar ? 'navbarActive' : 'navbar'}>\n        <HeaderContainerLeft>\n          <Brand>Mice Parade</Brand>\n          <NavbarList>\n            <Nav to='/' $active={pathname === '/'}>\n              Home\n            </Nav>\n            <Nav to='/about' $active={pathname === '/about'}>\n              About\n            </Nav>\n            {user && (\n              <Nav to='/new-post' $active={pathname === '/new-post'}>\n                New Post\n              </Nav>\n            )}\n          </NavbarList>\n        </HeaderContainerLeft>\n        <div>\n          <NavbarList>\n            <Nav to='/register' $active={pathname === '/register'}>\n              Sign Up\n            </Nav>\n            {!user && (\n              <Nav to='/login' $active={pathname === '/login'}>\n                Login\n              </Nav>\n            )}\n            {user && (\n              <Nav to='/' onClick={handleLogout}>\n                Logout\n              </Nav>\n            )}\n          </NavbarList>\n        </div>\n      </HeaderContainer>\n    </HeaderDiv>\n  )\n}\n","import styled from 'styled-components'\n\nconst FooterDiv = styled.div`\n  background: gray;\n  font-size: 12px;\n  text-align: center;\n  padding-top: 20px;\n  margin-top: 40px;\n  color: white;\n  height: 50px;\n`\n\nexport default function Footer() {\n  return <FooterDiv>COPYRIGHT © 2021 Ding ALL RIGHTS RESERVED.</FooterDiv>\n}\n","import { getAuthToken } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nconst limitPerPage = 5\r\n\r\nexport const getAllPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  )\r\n}\r\n\r\nexport const getPostsPerPage = (page) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=${limitPerPage}`\r\n  ).then((res) => res.json())\r\n}\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json())\r\n}\r\n\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json())\r\n}\r\n\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json())\r\n}\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json())\r\n}\r\n\r\nexport const createNewPost = (title, body) => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json())\r\n}\r\n\r\nexport { limitPerPage }\r\n","import styled from 'styled-components'\r\nimport { useEffect, useState } from 'react'\r\nimport { getAllPosts, limitPerPage } from '../../WebAPI'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ButtonStyle = styled(Link)`\r\n  background: white;\r\n  padding: 8px 10px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n  color: gray;\r\n\r\n  &:hover {\r\n    border: 1px solid gray;\r\n  }\r\n`\r\nconst PaginatorDiv = styled.div`\r\n  margin: 20px auto;\r\n`\r\n\r\nfunction PaginatorButton({ value, page }) {\r\n  return <ButtonStyle to={`/${page}`}>{value}</ButtonStyle>\r\n}\r\n\r\nexport default function PaginatorComponent({ value }) {\r\n  const [pages, setPages] = useState([])\r\n\r\n  useEffect(() => {\r\n    getAllPosts().then((posts) => {\r\n      const postsLength = posts.length\r\n      const totalPage = Math.ceil(postsLength / limitPerPage)\r\n      const pagesArray = []\r\n      for (let i = 1; i <= totalPage; i++) {\r\n        pagesArray.push(i)\r\n      }\r\n      setPages((pages) => pagesArray)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PaginatorDiv>\r\n      {pages.map((page) => {\r\n        return <PaginatorButton key={page} value={page} page={page} />\r\n      })}\r\n    </PaginatorDiv>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { css } from '@emotion/react'\r\nimport DotLoader from 'react-spinners/DotLoader'\r\n\r\nconst IsLoadingDiv = styled.div`\r\n  background: rgba(255, 255, 255, 0.3);\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst IsLoadingStyle = styled.div`\r\n  width: 300px;\r\n  height: 300px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n`\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`\r\n\r\nexport function IsLoadingComponent() {\r\n  return (\r\n    <IsLoadingDiv>\r\n      <IsLoadingStyle>\r\n        <DotLoader color='gray' css={override} size={60} />\r\n      </IsLoadingStyle>\r\n    </IsLoadingDiv>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bear.a5987557.png\";","import { useState, useEffect, useContext, useMemo, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { HashRouter as Router, Link, useParams } from 'react-router-dom'\r\nimport PaginatorComponent from '../../components/Paginator'\r\nimport { getPostsPerPage } from '../../WebAPI'\r\nimport { IsLoadingComponent } from '../../components/IsLoading/IsLoading'\r\nimport { LoadingContext } from '../../context'\r\nimport PostImg from '../../img/bear.png'\r\n\r\nconst HomepageDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-item: center;\r\n  margin-top: 40px;\r\n`\r\nconst Posts = styled.div``\r\n\r\nconst PostContainer = styled.div`\r\n  width: 60%;\r\n  height: 150px;\r\n  margin: 10px auto;\r\n  border-bottom: 1px solid silver;\r\n  padding: 20px 10px;\r\n  display: flex;\r\n  align-item: center;\r\n  justify-content: flex-start;\r\n`\r\n\r\nconst PostDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin-left: 30px;\r\n`\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 32px;\r\n  color: gray;\r\n  text-decoration: none;\r\n`\r\n\r\nconst PostDate = styled.div`\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  color: gray;\r\n`\r\n\r\nconst Img = styled.img``\r\n\r\nfunction Post({ post }) {\r\n  return (\r\n    <PostContainer>\r\n      <Img src={PostImg} />\r\n      <PostDiv>\r\n        <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\r\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\r\n      </PostDiv>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object,\r\n}\r\n\r\nexport default function HomePage() {\r\n  const [posts, setPosts] = useState([])\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext)\r\n  const { page } = useParams()\r\n  useEffect(() => {\r\n    setIsLoading((isLoading) => true)\r\n    if (!page) {\r\n      getPostsPerPage(1).then((posts) => {\r\n        setIsLoading((isLoading) => false)\r\n        setPosts(posts)\r\n      })\r\n    }\r\n    getPostsPerPage(page).then((posts) => {\r\n      setIsLoading((isLoading) => false)\r\n      setPosts(posts)\r\n    })\r\n  }, [page, setIsLoading])\r\n\r\n  return (\r\n    <HomepageDiv>\r\n      {isLoading && <IsLoadingComponent />}\r\n      <Posts>\r\n        {posts.map((post) => {\r\n          return <Post key={post.id} post={post}></Post>\r\n        })}\r\n      </Posts>\r\n      <PaginatorComponent />\r\n    </HomepageDiv>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.dcafc79c.png\";","import { useState, useEffect, useContext, useMemo, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { HashRouter as Router, Link, useParams } from 'react-router-dom'\r\nimport { IsLoadingComponent } from '../../components/IsLoading/IsLoading'\r\nimport { LoadingContext } from '../../context'\r\nimport AboutImg from '../../img/logo.png'\r\n\r\nconst AboutContainer = styled.div`\r\n  width: 100%;\r\n  height: 400px;\r\n  margin: 10px auto;\r\n  padding: 20px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst Img = styled.img`\r\n  height: 20px;\r\n`\r\n\r\nconst AboutContentStyle = styled.div`\r\n  color: #808080;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`\r\n\r\nfunction AboutContent() {\r\n  return (\r\n    <AboutContainer>\r\n      <Img src={AboutImg} />\r\n      <AboutContentStyle>\r\n        <h3>Mice Parade</h3>\r\n        <p>聽著 Mice Parade 中長出的部落格</p>\r\n        <p></p>\r\n      </AboutContentStyle>\r\n    </AboutContainer>\r\n  )\r\n}\r\n\r\nexport default function PostPage() {\r\n  return (\r\n    <AboutContainer>\r\n      <AboutContent></AboutContent>\r\n    </AboutContainer>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const ButtonStyle = styled.button`\r\n  color: white;\r\n  font-size: 20px;\r\n  background: gray;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n`\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ButtonStyle } from '../../components/Button/Button'\r\nimport { register, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../context'\r\nimport { IsLoadingComponent } from '../../components/IsLoading/IsLoading'\r\nimport { LoadingContext } from '../../context'\r\n\r\nconst SignupDivStyle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n`\r\n\r\nconst SignupFormStyle = styled.form`\r\n  border: 2px solid lightgrey;\r\n  border-radius: 5px;\r\n  padding: 80px 60px;\r\n  margin: 15px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nconst TitleStyle = styled.div`\r\n  color: gray;\r\n  font-size: 26px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst InputDivStyle = styled.div`\r\n  margin: 10px 0;\r\n  color: gray;\r\n`\r\n\r\nconst InputStyle = styled.input`\r\n  margin-left: 10px;\r\n  padding: 5px;\r\n  border: 1px solid gray;\r\n  border-radius: 3px;\r\n`\r\n\r\nconst SignupButtonStyle = styled(ButtonStyle)`\r\n  margin-top: 20px;\r\n`\r\n\r\nconst ErrMsgDivStyle = styled.div`\r\n  color: red;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`\r\n\r\nexport default function LoginPage() {\r\n  const { setUser } = useContext(AuthContext)\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext)\r\n  const [username, setUsername] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  let history = useHistory()\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setIsLoading((isLoading) => true)\r\n    setErrorMsg((errorMsg) => null)\r\n    register(nickname, username, password).then((data) => {\r\n      setIsLoading((isLoading) => false)\r\n      if (data.ok === 0) return setErrorMsg((errorMsg) => data.message)\r\n      setAuthToken(data.token)\r\n      getMe().then((res) => {\r\n        if (res.ok !== 1) return setErrorMsg((errorMsg) => res.message)\r\n        setUser(res.data)\r\n        history.push('/')\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SignupDivStyle>\r\n      {isLoading && <IsLoadingComponent />}\r\n      <TitleStyle>Sign Up</TitleStyle>\r\n      <SignupFormStyle onSubmit={handleSubmit}>\r\n        <InputDivStyle>\r\n          username:\r\n          <InputStyle\r\n            type='text'\r\n            value={username}\r\n            onChange={(e) => setUsername((username) => e.target.value)}\r\n          />\r\n        </InputDivStyle>\r\n        <InputDivStyle>\r\n          nickname:\r\n          <InputStyle\r\n            type='text'\r\n            value={nickname}\r\n            onChange={(e) => setNickname((nickname) => e.target.value)}\r\n          />\r\n        </InputDivStyle>\r\n        <InputDivStyle>\r\n          password:\r\n          <InputStyle\r\n            type='password'\r\n            value={password}\r\n            onChange={(e) => setPassword((password) => e.target.value)}\r\n          />\r\n        </InputDivStyle>\r\n        <SignupButtonStyle>SignUp</SignupButtonStyle>\r\n        {errorMsg && <ErrMsgDivStyle>{errorMsg}</ErrMsgDivStyle>}\r\n      </SignupFormStyle>\r\n    </SignupDivStyle>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ButtonStyle } from '../../components/Button/Button'\r\nimport { IsLoadingComponent } from '../../components/IsLoading/IsLoading'\r\nimport { login, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext, LoadingContext } from '../../context'\r\n\r\nconst LoginDivStyle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n`\r\n\r\nconst LoginFormStyle = styled.form`\r\n  border: 2px solid lightgrey;\r\n  border-radius: 5px;\r\n  padding: 80px 60px;\r\n  margin: 15px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nconst TitleStyle = styled.div`\r\n  color: gray;\r\n  font-size: 26px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst InputDivStyle = styled.div`\r\n  margin: 10px 0;\r\n  color: gray;\r\n`\r\n\r\nconst InputStyle = styled.input`\r\n  margin-left: 10px;\r\n  padding: 5px;\r\n  border: 1px solid gray;\r\n  border-radius: 3px;\r\n`\r\n\r\nconst LoginButtonStyle = styled(ButtonStyle)`\r\n  margin-top: 20px;\r\n`\r\n\r\nconst ErrMsgDivStyle = styled.div`\r\n  color: red;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`\r\n\r\nexport default function LoginPage() {\r\n  const { setUser } = useContext(AuthContext)\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  let history = useHistory()\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (isLoading) return\r\n    setErrorMsg((errorMsg) => null)\r\n    setIsLoading((isLoading) => true)\r\n    login(username, password)\r\n      .then((data) => {\r\n        setIsLoading((isLoading) => false)\r\n        if (data.ok === 0) return setErrorMsg((errorMsg) => data.message)\r\n        setAuthToken(data.token)\r\n        getMe()\r\n          .then((res) => {\r\n            if (res.ok !== 1) return setErrorMsg((errorMsg) => res.message)\r\n            setUser(res.data)\r\n            history.push('/')\r\n          })\r\n          .catch((err) => {\r\n            return setErrorMsg((errorMsg) => err.toString())\r\n          })\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading((isLoading) => false)\r\n        return setErrorMsg((errorMsg) => err.toString())\r\n      })\r\n  }\r\n\r\n  return (\r\n    <LoginDivStyle>\r\n      {isLoading && <IsLoadingComponent />}\r\n      <TitleStyle>Login</TitleStyle>\r\n      <LoginFormStyle onSubmit={handleSubmit}>\r\n        <InputDivStyle>\r\n          username:\r\n          <InputStyle\r\n            type='text'\r\n            value={username}\r\n            onChange={(e) => setUsername((username) => e.target.value)}\r\n          />\r\n        </InputDivStyle>\r\n        <InputDivStyle>\r\n          password:\r\n          <InputStyle\r\n            type='password'\r\n            value={password}\r\n            onChange={(e) => setPassword((password) => e.target.value)}\r\n          />\r\n        </InputDivStyle>\r\n        <LoginButtonStyle>Login</LoginButtonStyle>\r\n        {errorMsg && <ErrMsgDivStyle>{errorMsg}</ErrMsgDivStyle>}\r\n      </LoginFormStyle>\r\n    </LoginDivStyle>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { HashRouter as Router, useParams, useHistory } from 'react-router-dom'\r\nimport { getPost } from '../../WebAPI'\r\nimport { IsLoadingComponent } from '../../components/IsLoading/IsLoading'\r\nimport { LoadingContext } from '../../context'\r\nimport PostImg from '../../img/bear.png'\r\n\r\nconst PostContainer = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 20px 10px;\r\n  display: flex;\r\n`\r\n\r\nconst PostDiv = styled.div`\r\n  width: 60%;\r\n  margin: 30px auto;\r\n  padding: 20px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst PostInfo = styled.div`\r\n  display: flex;\r\n  align-item: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst PostTitle = styled.div`\r\n  font-size: 30px;\r\n  color: gray;\r\n  padding: 10px;\r\n  margin: 10px 0px;\r\n`\r\n\r\nconst PostDate = styled.div`\r\n  font-size: 14px;\r\n  color: gray;\r\n  padding: 10px;\r\n  margin: 20px 0px 10px 0px;\r\n`\r\n\r\nconst PostContent = styled.div`\r\n  font-size: 16px;\r\n  color: gray;\r\n  padding: 10px;\r\n  margin: 10px 0px;\r\n  white-space: pre-wrap;\r\n`\r\n\r\nconst Img = styled.img`\r\n  height: 460px;\r\n`\r\n\r\nexport default function PostPage() {\r\n  const [post, setPost] = useState([])\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext)\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    setIsLoading((isLoading) => true)\r\n    getPost(id).then((post) => {\r\n      setIsLoading((isLoading) => false)\r\n      if (post.length <= 0) return history.push('/')\r\n      post.length > 0 && setPost(post[0])\r\n    })\r\n  }, [id, history, setIsLoading])\r\n\r\n  return (\r\n    <PostContainer>\r\n      {isLoading && <IsLoadingComponent />}\r\n      <Img src={PostImg} className='img' />\r\n      <PostDiv>\r\n        <PostInfo>\r\n          <PostTitle>{post.title}</PostTitle>\r\n          <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\r\n        </PostInfo>\r\n        <PostContent>{post.body}</PostContent>\r\n      </PostDiv>\r\n    </PostContainer>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ButtonStyle } from '../../components/Button/Button'\r\nimport { createNewPost } from '../../WebAPI'\r\nimport { AuthContext } from '../../context'\r\nimport { IsLoadingComponent } from '../../components/IsLoading/IsLoading'\r\nimport { LoadingContext } from '../../context'\r\n\r\nconst NewPostDivStyle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst NewPostFormStyle = styled.form`\r\n  margin: 0px auto;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TitleDivStyle = styled.div`\r\n  margin: 10px 0;\r\n  color: gray;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst InputStyle = styled.input`\r\n  width: 100vh;\r\n  border: 2px solid lightgrey;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  margin-left: 10px;\r\n  outline: none;\r\n`\r\n\r\nconst ContentDivStyle = styled.div`\r\n  margin-top: 30px;\r\n  color: gray;\r\n  width: 110vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TextAreaStyle = styled.textarea`\r\n  border: 2px solid lightgrey;\r\n  border-radius: 5px;\r\n  margin-top: 10px;\r\n  outline: none;\r\n`\r\n\r\nconst NewPostButtonStyle = styled(ButtonStyle)`\r\n  margin-top: 20px;\r\n`\r\n\r\nconst ErrMsgDivStyle = styled.div`\r\n  color: red;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`\r\n\r\nexport default function NewPostPage() {\r\n  const { user } = useContext(AuthContext)\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext)\r\n  const [title, setTitle] = useState('')\r\n  const [body, setBody] = useState('')\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  let history = useHistory()\r\n  const handleSubmit = (e) => {\r\n    setIsLoading((isLoading) => true)\r\n    e.preventDefault()\r\n    setErrorMsg('')\r\n    createNewPost(title, body).then((res) => {\r\n      setIsLoading((isLoading) => false)\r\n      if (res.ok === 0) return setErrorMsg((errorMsg) => res.message)\r\n      history.push('/')\r\n    })\r\n  }\r\n\r\n  if (!user) history.push('/')\r\n\r\n  return (\r\n    <NewPostDivStyle>\r\n      {isLoading && <IsLoadingComponent />}\r\n      <NewPostFormStyle onSubmit={handleSubmit}>\r\n        <TitleDivStyle>\r\n          Title:\r\n          <InputStyle\r\n            type='text'\r\n            value={title}\r\n            onChange={(e) => setTitle((title) => e.target.value)}\r\n          />\r\n        </TitleDivStyle>\r\n        <ContentDivStyle>\r\n          Content:\r\n          <TextAreaStyle\r\n            rows='30'\r\n            cols='30'\r\n            type='text'\r\n            value={body}\r\n            onChange={(e) => setBody((password) => e.target.value)}\r\n          />\r\n        </ContentDivStyle>\r\n        <NewPostButtonStyle>Submit</NewPostButtonStyle>\r\n        {errorMsg && <ErrMsgDivStyle>{errorMsg}</ErrMsgDivStyle>}\r\n      </NewPostFormStyle>\r\n    </NewPostDivStyle>\r\n  )\r\n}\r\n","import { useEffect, useState, useContext } from 'react'\nimport styled from 'styled-components'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport HeaderComponent from './components/Header'\nimport FooterComponent from './components/Footer'\nimport HomePage from './pages/Homepage'\nimport AboutPage from './pages/Aboutpage'\nimport SignupPage from './pages/Signuppage'\nimport LoginPage from './pages/Loginpage'\nimport PostPage from './pages/Postpage'\nimport NewPostPage from './pages/Newpostpage'\nimport { AuthContext, LoadingContext } from './context'\nimport { getMe } from './WebAPI'\nimport { getAuthToken } from './utils'\n\nconst Root = styled.div`\n  padding-top: 110px;\n`\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const token = getAuthToken()\n  useEffect(() => {\n    if (!token) return setIsLoading((isLoading) => false)\n    getMe().then((res) => {\n      if (res.ok !== 1) return\n      setUser(res.data)\n    })\n  }, [token])\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n        <Root>\n          <Router>\n            <HeaderComponent />\n            <Switch>\n              <Route exact path='/'>\n                <HomePage />\n              </Route>\n              <Route path='/about'>\n                <AboutPage />\n              </Route>\n              <Route path='/login'>\n                <LoginPage />\n              </Route>\n              <Route path='/register'>\n                <SignupPage />\n              </Route>\n              <Route path='/post/:id'>\n                <PostPage />\n              </Route>\n              <Route path='/new-post'>\n                <NewPostPage />\n              </Route>\n              <Route path='/:page'>\n                <HomePage />\n              </Route>\n            </Switch>\n            <FooterComponent />\n          </Router>\n        </Root>\n      </LoadingContext.Provider>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}